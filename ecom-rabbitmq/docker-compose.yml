version: '3.8'

services:
  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ecom-rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecom-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: ecom-api-gateway
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network

  # Product Service
  product-service:
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
    container_name: ecom-product-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network

  # Order Service
  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    container_name: ecom-order-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: ./payment-service/Dockerfile
    container_name: ecom-payment-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network

  # Delivery Service
  delivery-service:
    build:
      context: .
      dockerfile: ./delivery-service/Dockerfile
    container_name: ecom-delivery-service
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./notification-service/Dockerfile
    container_name: ecom-notification-service
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network

networks:
  ecom-network:
    driver: bridge

volumes:
  rabbitmq_data:
