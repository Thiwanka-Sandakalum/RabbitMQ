openapi: 3.0.3
info:
  title: E-commerce API Gateway
  description: |
    API Gateway for e-commerce microservices application with RabbitMQ.
    This service acts as the entry point for client requests and coordinates communication with other microservices.
  version: 1.0.0
  contact:
    name: E-commerce Support
    email: support@example.com
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Check if the API Gateway is operational
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: Service is operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  service:
                    type: string
                    example: api-gateway

  /products:
    get:
      summary: Get all products
      description: Retrieve a list of all available products
      operationId: getProducts
      tags:
        - Products
      parameters:
        - name: q
          in: query
          description: Search query for filtering products
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Get product by ID
      description: Retrieve detailed information about a specific product
      operationId: getProductById
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

  /orders:
    post:
      summary: Create a new order
      description: Create a new order with selected products
      operationId: createOrder
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - products
              properties:
                userId:
                  type: string
                  description: ID of the user placing the order
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - productId
                      - quantity
                    properties:
                      productId:
                        type: string
                        description: ID of the product
                      quantity:
                        type: integer
                        minimum: 1
                        description: Quantity of the product
                      price:
                        type: number
                        format: float
                        description: Price of the product (optional, will use default if not provided)
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: ID of the created order
                  message:
                    type: string
                    example: Order created successfully. Payment processing will begin shortly.
                  order:
                    $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /orders/{id}:
    get:
      summary: Get order by ID
      description: Retrieve detailed information about a specific order
      operationId: getOrderById
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found

  /payments/process/{orderId}:
    post:
      summary: Process payment for an order
      description: Process payment for a specific order
      operationId: processPayment
      tags:
        - Payments
      parameters:
        - name: orderId
          in: path
          description: Order ID to process payment for
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - paymentMethod
                - amount
              properties:
                paymentMethod:
                  type: string
                  description: Method of payment (e.g., credit_card, paypal)
                amount:
                  type: number
                  format: float
                  description: Payment amount
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Payment processed successfully
                  payment:
                    $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid payment request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /deliveries/{orderId}:
    get:
      summary: Get delivery status by order ID
      description: Retrieve delivery information for a specific order
      operationId: getDeliveryByOrderId
      tags:
        - Deliveries
      parameters:
        - name: orderId
          in: path
          description: Order ID to get delivery information for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delivery information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '404':
          description: Delivery not found for this order

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          format: float
          description: Product price
        stock:
          type: integer
          description: Available quantity in stock

    Order:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the order
        userId:
          type: string
          description: ID of the user who placed the order
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: ID of the ordered product
              quantity:
                type: integer
                description: Quantity ordered
              price:
                type: number
                format: float
                description: Price per unit
        status:
          type: string
          description: Current status of the order
          enum:
            - CREATED
            - PAYMENT_PENDING
            - PAID
            - PROCESSING
            - SHIPPED
            - DELIVERED
            - CANCELLED
            - REFUNDED
        totalAmount:
          type: number
          format: float
          description: Total order amount
        createdAt:
          type: integer
          format: int64
          description: Order creation timestamp (Unix timestamp in milliseconds)

    Payment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the payment
        orderId:
          type: string
          description: ID of the associated order
        amount:
          type: number
          format: float
          description: Payment amount
        status:
          type: string
          description: Payment status
          enum:
            - INITIATED
            - PROCESSING
            - COMPLETED
            - FAILED
            - REFUNDED
        paymentMethod:
          type: string
          description: Method of payment
        transactionId:
          type: string
          description: External transaction reference ID
        createdAt:
          type: integer
          format: int64
          description: Payment creation timestamp (Unix timestamp in milliseconds)

    Delivery:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the delivery
        orderId:
          type: string
          description: ID of the associated order
        status:
          type: string
          description: Delivery status
          enum:
            - CREATED
            - PROCESSING
            - SHIPPED
            - IN_TRANSIT
            - OUT_FOR_DELIVERY
            - DELIVERED
            - FAILED
        trackingNumber:
          type: string
          description: Shipping tracking number
        courier:
          type: string
          description: Courier or shipping company
        estimatedDeliveryTime:
          type: integer
          format: int64
          description: Estimated delivery timestamp (Unix timestamp in milliseconds)
        createdAt:
          type: integer
          format: int64
          description: Delivery creation timestamp (Unix timestamp in milliseconds)
